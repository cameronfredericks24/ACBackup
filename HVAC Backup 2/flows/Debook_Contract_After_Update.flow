<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Copy_1_of_Send_Notification</name>
        <label>Send Notification</label>
        <locationX>440</locationX>
        <locationY>2556</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Contract Short Closed Update</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBodyShortClosed</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification</name>
        <label>Send Notification</label>
        <locationX>176</locationX>
        <locationY>2556</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>RecipientList</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Contract Debooking Update</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBodyDebooked</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Add_Initator_to_Recipient</name>
        <label>Add Initator to Recipient</label>
        <locationX>308</locationX>
        <locationY>2256</locationY>
        <assignmentItems>
            <assignToReference>RecipientList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Modification_Initiator__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Debooking_or_Short_Closure</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_ST_Id_to_List</name>
        <label>Add ST Id to List</label>
        <locationX>528</locationX>
        <locationY>600</locationY>
        <assignmentItems>
            <assignToReference>STList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_through_STs.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_STs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_List_Size</name>
        <label>Assign to List Size</label>
        <locationX>440</locationX>
        <locationY>1308</locationY>
        <assignmentItems>
            <assignToReference>pmsListSize</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>pmsList</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_If_PMS_List_Size</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_To_PMS_List</name>
        <label>Assign To PMS List</label>
        <locationX>528</locationX>
        <locationY>1008</locationY>
        <assignmentItems>
            <assignToReference>pmsVar.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_PMS_Events.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>pmsVar.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_to_PMS_Lists</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_PMS_Lists</name>
        <label>Assign to PMS List</label>
        <locationX>528</locationX>
        <locationY>1116</locationY>
        <assignmentItems>
            <assignToReference>pmsList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>pmsVar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_PMS_Events</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Debooking_or_Short_Closure</name>
        <label>Check if Debooking or Short Closure</label>
        <locationX>440</locationX>
        <locationY>2448</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Debooked</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Modification_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Debook</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RecipientList</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Notification</targetReference>
            </connector>
            <label>Is Debooked</label>
        </rules>
        <rules>
            <name>Is_Short_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Modification_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Short Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>RecipientList</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Send_Notification</targetReference>
            </connector>
            <label>Is Short Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Modification_Initiator_Exists</name>
        <label>Check if Modification Initiator Exists</label>
        <locationX>440</locationX>
        <locationY>2148</locationY>
        <defaultConnector>
            <targetReference>Check_if_Debooking_or_Short_Closure</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>if_initiator_user_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Modification_Initiator__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Initator_to_Recipient</targetReference>
            </connector>
            <label>if initiator user exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_If_PMS_List_Size</name>
        <label>Check If PMS List Size</label>
        <locationX>440</locationX>
        <locationY>1416</locationY>
        <defaultConnector>
            <targetReference>Close_all_Service_Tickets</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Zero</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>pmsListSize</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_PMS_List</targetReference>
            </connector>
            <label>Not Zero</label>
        </rules>
    </decisions>
    <description>made it asynchronous</description>
    <environments>Default</environments>
    <formulas>
        <name>NotificationBodyDebooked</name>
        <dataType>String</dataType>
        <expression>&quot;The Contract &quot;+{!$Record.Name}+&quot; has been Debooked by the CBO&quot;</expression>
    </formulas>
    <formulas>
        <name>NotificationBodyShortClosed</name>
        <dataType>String</dataType>
        <expression>&quot;The Contract &quot;+{!$Record.Name}+&quot; has been Short closed by the CBO&quot;</expression>
    </formulas>
    <formulas>
        <name>todayDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Debook Contract After Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Debook Contract After Update</label>
    <loops>
        <name>Loop_PMS_Events</name>
        <label>Loop PMS Events</label>
        <locationX>440</locationX>
        <locationY>900</locationY>
        <collectionReference>Get_PMS_Events</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_To_PMS_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_to_List_Size</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_through_STs</name>
        <label>Loop through STs</label>
        <locationX>440</locationX>
        <locationY>492</locationY>
        <collectionReference>Get_all_Service_Tickets_not_Closed</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_ST_Id_to_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_PMS_Events</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_all_Service_Tickets_not_Closed</name>
        <label>Get all Service Tickets not Closed</label>
        <locationX>440</locationX>
        <locationY>384</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_STs</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type_ST_PMS.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ServiceContractId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>WorkOrder</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Custom_Notification</name>
        <label>Get Custom Notification</label>
        <locationX>440</locationX>
        <locationY>2040</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Modification_Initiator_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Notify_Initiator_CBO_for_Debooking_and_Shortclosure</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_PMS_Events</name>
        <label>Get PMS Events</label>
        <locationX>440</locationX>
        <locationY>792</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_PMS_Events</targetReference>
        </connector>
        <filterLogic>2 AND 1 AND (3 OR 4)</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Service_Contract__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date__c</field>
            <operator>GreaterThan</operator>
            <value>
                <elementReference>$Record.EndDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>PMS_Tickets_Creation_Date__c</field>
            <operator>GreaterThan</operator>
            <value>
                <elementReference>$Record.EndDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PMS_Event__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type_MR</name>
        <label>Get Record Type MR</label>
        <locationX>440</locationX>
        <locationY>1824</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_all_Material_Requests</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Material_Request</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ProductRequest</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type_ST_PMS</name>
        <label>Get Record Type ST PMS</label>
        <locationX>440</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_all_Service_Tickets_not_Closed</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PMS</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>WorkOrder</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Close_all_Service_Tickets</name>
        <label>Close all Service Tickets</label>
        <locationX>440</locationX>
        <locationY>1716</locationY>
        <connector>
            <targetReference>Get_Record_Type_MR</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceContractId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type_ST_PMS.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_all_Material_Requests</name>
        <label>Update all Material Requests</label>
        <locationX>440</locationX>
        <locationY>1932</locationY>
        <connector>
            <targetReference>Get_Custom_Notification</targetReference>
        </connector>
        <filterLogic>(1 OR 2 OR 3) AND 4 AND 5</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Delivered</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Partially Delivered</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Received</stringValue>
            </value>
        </filters>
        <filters>
            <field>WorkOrderId</field>
            <operator>In</operator>
            <value>
                <elementReference>STList</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type_MR.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Canceled</stringValue>
            </value>
        </inputAssignments>
        <object>ProductRequest</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_PMS_List</name>
        <label>Update PMS List</label>
        <locationX>308</locationX>
        <locationY>1524</locationY>
        <connector>
            <targetReference>Close_all_Service_Tickets</targetReference>
        </connector>
        <inputReference>pmsList</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Modification_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Debook</stringValue>
            </value>
        </filters>
        <filters>
            <field>Modification_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Short Closed</stringValue>
            </value>
        </filters>
        <object>ServiceContract</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Asynchronous</name>
            <connector>
                <targetReference>Get_Record_Type_ST_PMS</targetReference>
            </connector>
            <label>Asynchronous</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Dear {!$Record.Account.Name},



We are thrilled to welcome you to the Bluestar family!

Your contract has been successfully activated, and we are excited to embark on this journey with you. At Bluestar, we are committed to providing you with exceptional service and support to ensure you have the best experience possible.</text>
    </textTemplates>
    <textTemplates>
        <name>EmailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Welcome To Bluestar.</text>
    </textTemplates>
    <variables>
        <name>pmsList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PMS_Event__c</objectType>
    </variables>
    <variables>
        <name>pmsListSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>pmsVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>PMS_Event__c</objectType>
    </variables>
    <variables>
        <name>RecipientList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>STList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
