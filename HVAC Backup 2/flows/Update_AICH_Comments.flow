<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <decisions>
        <name>Is_Step_Name_Send_to_AICH</name>
        <label>Is Step Name &quot;Send to AICH&quot;?</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Step_Name</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Node.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Send To AICH</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Updating_Comments</targetReference>
            </connector>
            <label>Check_Step_Name</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Update AICH {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update AICH Comments</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Node</name>
        <label>Get_Node</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Step_Name_Send_to_AICH</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Process_Instance_Step.StepNodeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProcessNode</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Process_Instance</name>
        <label>Get Process Instance</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Process_Instance_Step</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TargetObjectId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProcessInstance</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Process_Instance_Step</name>
        <label>Get Process Instance Step</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Node</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4)</filterLogic>
        <filters>
            <field>ProcessInstanceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Process_Instance.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>StepStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>StepStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Rejected</stringValue>
            </value>
        </filters>
        <filters>
            <field>StepStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Reassigned</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProcessInstanceStep</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Updating_Comments</name>
        <label>Updating Comments</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <inputAssignments>
            <field>AICH_Comment__c</field>
            <value>
                <elementReference>Get_Process_Instance_Step.Comments</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Process_Instance</targetReference>
        </connector>
        <filterFormula>(ISCHANGED({!$Record.Approval_Status__c}) &amp;&amp;
(
  TEXT({!$Record.Approval_Status__c}) = &quot;Approved&quot; || 
  TEXT({!$Record.Approval_Status__c}) = &quot;Rejected&quot; 

))</filterFormula>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>FoundMatch</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
