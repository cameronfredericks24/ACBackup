<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Get_Part_Price</name>
        <label>Get Part Price</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <actionName>SparePriceInvocable</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Get_Tax</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>model</name>
            <value>
                <elementReference>$Record.WorkOrderLineItem.Asset.Product2.ProductCode</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>partId</name>
            <value>
                <elementReference>$Record.Product__r.Name</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SparePriceInvocable</nameSegment>
        <outputParameters>
            <assignToReference>baseprice</assignToReference>
            <name>basePrice</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>customerMargin</assignToReference>
            <name>customerMargin</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>DealerMargin</assignToReference>
            <name>dealerMargin</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>scope</assignToReference>
            <name>scope</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>PartPrice</assignToReference>
            <name>totalPrice</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <decisions>
        <name>Get_price</name>
        <label>Get price?</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Material_Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WorkOrderLineItem.Asset.Product2.ProductCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Product__r.Name</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WorkOrderId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Part_Price</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>ActualPartPrice</name>
        <dataType>Number</dataType>
        <expression>IF(ISNULL({!PartPrice}),0,{!PartPrice})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ServiceTicketSparePrice</name>
        <dataType>Number</dataType>
        <expression>IF(ISNULL({!$Record.WorkOrder.Spare_Charge__c}), {!TotalSparePricewithTax},  {!$Record.WorkOrder.Spare_Charge__c} + {!TotalSparePricewithTax} )</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>TotalSparePricewithTax</name>
        <dataType>Number</dataType>
        <expression>{!ActualPartPrice} + {!TotalTax}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>TotalTax</name>
        <dataType>Number</dataType>
        <expression>IF({!$Record.WorkOrder.IGST__c} ,  ({!ActualPartPrice} * {!Get_Tax.IGST__c})/100 ,  ( ({!ActualPartPrice} * {!Get_Tax.CGST__c})/100) + ( ({!ActualPartPrice} * {!Get_Tax.SGST__c})/100)  )</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Update Spare Price {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Spare Price</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Tax</name>
        <label>Get Tax</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Price</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>HSN_Code__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Product__r.HSN_No__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>HSNCode_Tax__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Price</name>
        <label>Update Price</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Update_ST</targetReference>
        </connector>
        <inputAssignments>
            <field>Base_price__c</field>
            <value>
                <elementReference>baseprice</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Customers_price__c</field>
            <value>
                <elementReference>customerMargin</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Delear_Margin__c</field>
            <value>
                <elementReference>DealerMargin</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PartScope__c</field>
            <value>
                <elementReference>scope</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spare_Price_Tax__c</field>
            <value>
                <elementReference>TotalTax</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Spare_Price__c</field>
            <value>
                <elementReference>ActualPartPrice</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_ST</name>
        <label>Update ST</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Spare_Charge__c</field>
            <value>
                <elementReference>ServiceTicketSparePrice</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_price</targetReference>
        </connector>
        <object>ProductRequest</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>baseprice</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>customerMargin</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>DealerMargin</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>PartPrice</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>scope</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
