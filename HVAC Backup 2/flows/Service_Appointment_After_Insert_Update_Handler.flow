<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_to_Customer</name>
        <label>Send Email to Customer</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_Work_Order.Contact_Email__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>CustomerEmailSubjectForSch</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CustomerEmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_User_Ids</name>
        <label>Assign User Ids</label>
        <locationX>798</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>UserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Over_Assigned_Resource.ServiceResource.RelatedRecordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Assigned_Resource</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Assign_User_Ids</name>
        <label>Copy 1 of Assign User Ids</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>UserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Copy_1_of_Loop_Over_Assigned_Resource.ServiceResource.RelatedRecordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Copy_1_of_Loop_Over_Assigned_Resource</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>check_userId_size</name>
        <label>check userId size</label>
        <locationX>710</locationX>
        <locationY>947</locationY>
        <defaultConnectorLabel>No User Ids</defaultConnectorLabel>
        <rules>
            <name>size_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserIds</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>size&gt;0</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckConditions</name>
        <label>Check Conditions</label>
        <locationX>578</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Scheduled</name>
            <conditionLogic>(3 AND 1 ) OR (1 AND 2)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Scheduled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ISNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Get_Assigned_Resource</targetReference>
            </connector>
            <label>Scheduled</label>
        </rules>
        <rules>
            <name>Rescheduled</name>
            <conditionLogic>(1 AND 4 AND 5 AND 6) OR ( 2 AND 3 )</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ArrivalWindowStartTime</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rescheduled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ArrivalWindowStartTime</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.ArrivalWindowStartTime</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Assigned_Resource</targetReference>
            </connector>
            <label>Rescheduled</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_check_userId_size</name>
        <label>Copy 1 of check userId size</label>
        <locationX>50</locationX>
        <locationY>947</locationY>
        <defaultConnectorLabel>No User Ids</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_size_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserIds</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Copy 1 of size&gt;0</label>
        </rules>
        <rules>
            <name>Email_to_Customer</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Work_Order.Contact_Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Work_Order</targetReference>
            </connector>
            <label>Email to Customer</label>
        </rules>
    </decisions>
    <description>removed custom notification to technician</description>
    <environments>Default</environments>
    <formulas>
        <name>CustomerEmailSubject</name>
        <dataType>String</dataType>
        <expression>&quot;Service Appointment for &quot;+ {!$Record.AppointmentNumber}+&quot; has been rescheduled.&quot;</expression>
    </formulas>
    <formulas>
        <name>CustomerEmailSubjectForSch</name>
        <dataType>String</dataType>
        <expression>&quot;Service Appointment for &quot;+ {!$Record.Subject} +&quot; has been scheduled.&quot; +{!Text}</expression>
    </formulas>
    <formulas>
        <name>Enddate</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Status}, &apos;Rescheduled&apos;), TEXT({!$Record.ActualEndTime}+(5.5/24)), TEXT({!$Record.ArrivalWindowEndTime} + (5.5/24)))</expression>
    </formulas>
    <formulas>
        <name>EndDateFormula</name>
        <dataType>DateTime</dataType>
        <expression>IF(ISPICKVAL({!$Record.Status}, &apos;Rescheduled&apos;), {!$Record.ActualEndTime}, {!$Record.ArrivalWindowEndTime})</expression>
    </formulas>
    <formulas>
        <name>ISNEW</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>NewTicketSubjectFormula</name>
        <dataType>String</dataType>
        <expression>&quot;Service Appointment &quot;+ {!$Record.AppointmentNumber} +&quot; has been scheduled.&quot;</expression>
    </formulas>
    <formulas>
        <name>NotificationBody</name>
        <dataType>String</dataType>
        <expression>&quot;Scheduled Start Date : &quot; + {!StarteDate}+ &quot;  &quot; + &quot;Scheduled End Date: &quot; + {!Enddate}</expression>
    </formulas>
    <formulas>
        <name>NotificationSubject</name>
        <dataType>String</dataType>
        <expression>&quot;Service Appointment &quot;+ {!$Record.AppointmentNumber} +&quot; has been rescheduled.&quot;</expression>
    </formulas>
    <formulas>
        <name>StartDateForluma</name>
        <dataType>DateTime</dataType>
        <expression>IF(ISPICKVAL({!$Record.Status}, &apos;Rescheduled&apos;),{!$Record.ActualStartTime},{!$Record.ArrivalWindowStartTime})</expression>
    </formulas>
    <formulas>
        <name>StarteDate</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!$Record.Status}, &apos;Rescheduled&apos;),TEXT({!$Record.ActualStartTime}+(5.5/24)),TEXT({!$Record.ArrivalWindowStartTime}+ (5.5/24)))</expression>
    </formulas>
    <interviewLabel>Service Appointment After Insert Update Handler {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Service Appointment After Insert Update Handler</label>
    <loops>
        <name>Copy_1_of_Loop_Over_Assigned_Resource</name>
        <label>Copy 1 of Loop Over Assigned Resource</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <collectionReference>Copy_1_of_Get_Assigned_Resource</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Copy_1_of_Assign_User_Ids</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Copy_1_of_check_userId_size</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Over_Assigned_Resource</name>
        <label>Loop Over Assigned Resource</label>
        <locationX>710</locationX>
        <locationY>647</locationY>
        <collectionReference>Get_Assigned_Resource</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_User_Ids</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>check_userId_size</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Copy_1_of_Get_Assigned_Resource</name>
        <label>Copy 1 of Get Assigned Resource</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_Get_Custom_Notification_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AssignedResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Copy_1_of_Get_Custom_Notification_ID</name>
        <label>Copy 1 of Get Custom Notification ID</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_Loop_Over_Assigned_Resource</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Notification_to_Technician</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Assigned_Resource</name>
        <label>Get Assigned Resource</label>
        <locationX>710</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Custom_Notification_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceAppointmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AssignedResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Custom_Notification_ID</name>
        <label>Get Custom Notification ID</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Over_Assigned_Resource</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Notification_to_Technician</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Work_Order</name>
        <label>Get Work Order</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Email_to_Customer</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrder</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>CheckConditions</targetReference>
        </connector>
        <object>ServiceAppointment</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>CustomerEmailBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Dear {!$Record.Account.Name} 
Service Appointment for {!$Record.Subject} has been scheduled. Please find the scheduled information below: 
Scheduled Start Date : {!StartDateForluma}
Scheduled End Date:  {!EndDateFormula}
In case of any queries, please contact us on our 24x7 Toll free number 1800 209 1177 or email us at customerservice@bluestarindia.com.
Thanks</text>
    </textTemplates>
    <textTemplates>
        <name>NewTicketAssigned</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;New Ticket Assigned Please Check!&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>NewTicketSubject</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hey, Please check this Ticket!&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>Text</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
