<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_To_SSG</name>
        <label>Send Email To  SSG</label>
        <locationX>182</locationX>
        <locationY>2063</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_case</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Get_product_cross_functional_email_ids.Cross_Functional_Contact__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>emailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>$Label.Sender_Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>emailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>emailTemplate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Assign_Emails</name>
        <label>Assign Emails</label>
        <locationX>446</locationX>
        <locationY>1787</locationY>
        <assignmentItems>
            <assignToReference>emailAddress</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Over_Collection.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Collection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignUserIds</name>
        <label>AssignUserIds</label>
        <locationX>402</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>UserIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Over_Members.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Members</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>Filter_Users</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter Users</label>
        <locationX>358</locationX>
        <locationY>1571</locationY>
        <assignNextValueToReference>currentItem_Filter_Users</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_All_Active_Users</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_Filter_Users.Id</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>Loop_Over_Group_Member.UserOrGroupId</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Loop_Over_Collection</targetReference>
        </connector>
    </collectionProcessors>
    <decisions>
        <name>Check_Division</name>
        <label>Check Division</label>
        <locationX>314</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Loop_Over_Members</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Division NULL</defaultConnectorLabel>
        <rules>
            <name>CPSD</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Case.Servicable_Division__r.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CPSD</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_SSG_CPSD_Group</targetReference>
            </connector>
            <label>CPSD</label>
        </rules>
        <rules>
            <name>UPSD</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Case.Servicable_Division__r.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CRBG</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Case.Servicable_Division__r.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CPAG</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_SSG_UPSD_Group_Record</targetReference>
            </connector>
            <label>UPSD</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_FT_Product</name>
        <label>Is FT Product?</label>
        <locationX>534</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>FT_Product</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Case.Product.Is_Field_Trial__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Division</targetReference>
            </connector>
            <label>Yes FT Product</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_MemberIds_Present</name>
        <label>Is MemberIds Present?</label>
        <locationX>314</locationX>
        <locationY>1355</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>memberIds</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Over_Group_Member</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Send  Critical Feedback Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send  Critical Feedback Email</label>
    <loops>
        <name>Loop_Over_Collection</name>
        <label>Loop Over Collection</label>
        <locationX>358</locationX>
        <locationY>1679</locationY>
        <collectionReference>Filter_Users</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Emails</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_Over_Group_Member</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Over_Group_Member</name>
        <label>Loop Over Group Member</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <collectionReference>memberIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Filter_Users</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Send_Email_To_SSG</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Over_Members</name>
        <label>Loop Over Members</label>
        <locationX>314</locationX>
        <locationY>839</locationY>
        <collectionReference>memberIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AssignUserIds</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_All_Active_Users</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_All_Active_Users</name>
        <label>Get All Active Users</label>
        <locationX>314</locationX>
        <locationY>1139</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_product_cross_functional_email_ids</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>UserIds</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_product_cross_functional_email_ids</name>
        <label>Get product cross functional email ids</label>
        <locationX>314</locationX>
        <locationY>1247</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_MemberIds_Present</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Product__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_SSG_CPSD_Group</name>
        <label>Get SSG-CPSD Group</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_SSG_CPSD_Group_Member</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSG_CPSD</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_SSG_CPSD_Group_Member</name>
        <label>Get SSG-CPSD Group Member</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Over_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_SSG_CPSD_Group.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputReference>memberIds</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <queriedFields>GroupId</queriedFields>
        <queriedFields>SystemModstamp</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_SSG_UPSD_Group_Member</name>
        <label>Get SSG-UPSD Group Member</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Over_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_SSG_UPSD_Group_Record.Id</elementReference>
            </value>
        </filters>
        <object>GroupMember</object>
        <outputReference>memberIds</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <queriedFields>GroupId</queriedFields>
        <queriedFields>SystemModstamp</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_SSG_UPSD_Group_Record</name>
        <label>Get SSG-UPSD Group Record</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_SSG_UPSD_Group_Member</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SSG_UPSD</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_case</name>
        <label>Update case</label>
        <locationX>182</locationX>
        <locationY>2171</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Critical_Feedback_Comment__c</field>
            <value>
                <elementReference>$Record.Critical_Feedback_Comment__c</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>408</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_FT_Product</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Critical_Feedback_Comment__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Is_Critical_Feedback_Captured__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Is_Critical_Feedback_Captured__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>WorkOrder</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>emailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Critical Maintenance Update: Immediate Action Required</text>
    </textTemplates>
    <textTemplates>
        <name>emailTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Dear Team,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;During our recent inspection, maintenance schedule, and breakdown analysis, we have identified critical issues that require immediate attention. Please find the details below:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Critical Comment&lt;/strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; &lt;/span&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;: {!$Record.Critical_Feedback_Comment__c}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Service Ticket No. :  {!$Record.Ticket_Number_Read_Only__c}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Branch :  {!$Record.Case.Branch__r.Name}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Customer Name :  {!$Record.Account.Name}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Product Name : {!$Record.Case.Product.Name}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Model No. :  {!$Record.Case.Product.ProductCode}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Product Sub Family : {!$Record.Case.Product.Product_Sub_Family__r.Name}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;Product Family :  {!$Record.Case.Product.Product_Family__r.Name}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Best regards,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Blue Star&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>currentItem_Filter_Users</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <name>emailAddress</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>memberIds</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GroupMember</objectType>
    </variables>
    <variables>
        <name>UserIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
