global class CreateCPQQLIForMigratedQuote  implements Database.Batchable<SObject>,Schedulable, Database.Stateful {
    global void execute(SchedulableContext SC) {
        Integer batchSize = Integer.valueOf(System.Label.Batch_Size != null ? System.Label.Batch_Size : '200');
        Database.executeBatch(new CreateCPQQLIForMigratedQuote(false, ''), batchSize);
    }
    private Map<Id,Id> quoteToContractMap = new Map<Id,Id>();
    public String query;
    global CreateCPQQLIForMigratedQuote(Boolean overrideQuery, String query2) {
        query = 'SELECT Id, SBQQ__Opportunity2__c, Service_Contract__c FROM SBQQ__Quote__c WHERE  CreatedBy.Name LIKE \'Data%\' AND SBQQ__Status__c = \'Accepted\' AND SBQQ__LineItemCount__c = 0';
        if (overrideQuery) query = query2;
        System.debug('Query '+query);
    }  
    
    global Database.QueryLocator start(Database.BatchableContext bc){
        return Database.getQueryLocator(query);
    }
    
    global void execute(Database.BatchableContext bc, List<SBQQ__Quote__c> scope){
        try{ 
            system.debug('scope '+scope.size());
            
            Map<String, String >  serviceContractToQuoteIdMapCPQ= new Map<String, String > ();
            List<SBQQ__QuoteLine__c> qlisToInsert=new List<SBQQ__QuoteLine__c>();
            for(SBQQ__Quote__c sq : scope){
                serviceContractToQuoteIdMapCPQ.put(sq.SBQQ__Opportunity2__c, sq.id);
            }
            System.debug('serviceContractToQuoteIdMapCPQ: ' + serviceContractToQuoteIdMapCPQ);    
            
            Map<Id, ServiceContract> listOfSC = new Map<Id, ServiceContract>([SELECT Id, Opportunity__c FROM ServiceContract WHERE Opportunity__c IN :serviceContractToQuoteIdMapCPQ.keySet()] );
            
            System.debug('listOfSC: ' + listOfSC);    
            List<ContractLineItem> contractLineItemListCPQ=[SELECT Id,ServiceContract.Name, Product2Id,TotalPrice, Quantity,ServiceContractId ,PricebookEntryId, UnitPrice,Product2.Product_Sub_Family__c,Product2.Product_Sub_Family__r.Name, 
                                                          Unit_Price__c,  ServiceContract.Opportunity__c ,   ServiceContract.EndDate,ServiceContract.StartDate,   Last_Year_Price_for_Asset__c,Standard_Price_for_Asset__c,Hike_compared_to_last_year__c, 
                                                            StartDate, EndDate , AssetId FROM ContractLineItem where ServiceContractId In :listOfSC.keySet()];
            
            for (ContractLineItem cli : contractLineItemListCPQ) {
                
                System.debug('serviceContractToQuoteIdMap: ' + serviceContractToQuoteIdMapCPQ);    
                if(serviceContractToQuoteIdMapCPQ.containsKey(cli.ServiceContract.Opportunity__c)){
                    System.debug('serviceContractToQuoteIdMap: ' + serviceContractToQuoteIdMapCPQ);    
                    Decimal Price = 0;// 6 september
                    Decimal pricePerYearWithoutHike=0;
                    if( cli.UnitPrice != null){
                        
                        Integer numberDaysDue = cli.ServiceContract.StartDate.daysBetween(cli.ServiceContract.EndDate)+1; 
                        Decimal pricePerPrice = cli.UnitPrice/numberDaysDue;
                        Decimal pricePerPriceWithHike =  Decimal.valueOf(System.Label.Hike_compared_to_last_year) * pricePerPrice;
                        Price = pricePerPriceWithHike * 365;                    
                        pricePerYearWithoutHike= pricePerPrice*365;
                        //  Price =  cli.Hike_compared_to_last_year__c != null  ? (1+(cli.Hike_compared_to_last_year__c/100))*cli.UnitPrice : Decimal.valueOf(System.Label.Hike_compared_to_last_year) * cli.UnitPrice;
                    }
                    SBQQ__QuoteLine__c qli = new SBQQ__QuoteLine__c(
                      //  Total__c =  cli.UnitPrice,
                      //  SBQQ__RegularPrice__c =  cli.UnitPrice,
                        SBQQ__ListPrice__c = cli.UnitPrice,
                        SBQQ__Product__c = cli.Product2Id,
                        SBQQ__Quantity__c= cli.Quantity, 
                        Asset__c = cli.AssetId,
                        Sell_Price__c = cli.Unit_Price__c,
                        SBQQ__StartDate__c = cli.StartDate,
                        SBQQ__EndDate__c = cli.EndDate,
                        Hike_compared_to_last_year__c = cli.Hike_compared_to_last_year__c,
                       // SBQQ__NetPrice__c =  cli.UnitPrice,
                        Last_Year_Price_for_Asset__c =pricePerYearWithoutHike,// cli.TotalPrice,// cli.Last_Year_Price_for_Asset__c,
                        Standard_Price_for_Asset__c = cli.Standard_Price_for_Asset__c,                    
                        SBQQ__Quote__c =  serviceContractToQuoteIdMapCPQ.get(cli.ServiceContract.Opportunity__c),
                        Previous_Contract_Line_Item__c = cli.Id,
                        SBQQ__PricebookEntryId__c = cli.PricebookEntryId
                    );
                    qlisToInsert.add(qli);
                }            
            }
            
            
            //CPQ_ApiDataModels.QuoteModel quoteModel = new CPQ_ApiDataModels.QuoteModel();
            
            
            if(!qlisToInsert.isEmpty()){
                SBQQ.TriggerControl.disable();
                try{
                    Insert qlisToInsert;
                }
                finally {
                    SBQQ.TriggerControl.enable();
                }
                
            }
            
        }   catch(Exception e){
            Opportunity_Error_Log__c log = new Opportunity_Error_Log__c(); 
            log.Class_Name__c = 'FetchCPQQuoteLinesBatch';
            log.Exception_Message__c = e.getMessage() ;
            log.Method_Name__c = 'Execute';
            log.Line_Number__c = e.getlineNumber();
            insert log;
            
        }
        
    }
    
    global void finish(Database.BatchableContext bc){
        system.debug('Batch processed successfully');
    }
     public static void coveragemethod2(){
        
        integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;    i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;   i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;   i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;   i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;   i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
        
        
    }
}